// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.SMS.Client.AutorestClient
{
    using Lykke.Service;
    using Lykke.Service.SMS;
    using Lykke.Service.SMS.Client;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SMSAPI.
    /// </summary>
    public static partial class SMSAPIExtensions
    {
            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object IsAlive(this ISMSAPI operations)
            {
                return operations.IsAliveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Checks service is alive
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> IsAliveAsync(this ISMSAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsAliveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reuqest'>
            /// </param>
            public static void ApiSmsComtrollerPost(this ISMSAPI operations, SmsRequestModel reuqest = default(SmsRequestModel))
            {
                operations.ApiSmsComtrollerPostAsync(reuqest).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='reuqest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiSmsComtrollerPostAsync(this ISMSAPI operations, SmsRequestModel reuqest = default(SmsRequestModel), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiSmsComtrollerPostWithHttpMessagesAsync(reuqest, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
